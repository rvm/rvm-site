---
title: Contributing to the RVM project.
---

.breadcrumbs
  %a{ :href => "/" }
    Documentation
  &nbsp;>&nbsp;
  %a{ :href => "/development/" }
    Development
  &nbsp;>&nbsp;
  %a{ :href => "/development/contributing/" }
    Contributing
  %hr

%a{ :name => "contribute" }
%h1 Contributing to RVM

%p
  So, you want to contribute to rvm? Excellent! We can always do with
  an extra helping hand (or two). If you're not a great coder, we always
  appreciate people helping out in the channel, and giving support. If you
  are interested in coding, there are a few things you'll need to know - and
  a few things that make the process in general a lot smoother.

%p
  We also greatly appreciate documentation patches, submitted from the rvm-site repository.

%h2 General Guidelines

%ol
  %li
    Read the
    %a{:href => "https://github.com/wayneeseguin/rvm/blob/master/HACKING.md"} How to hack on RVM
    guide.  It explains how to setup a second copy of RVM to allow you to hack without
    disturbing your primary RVM installation and how to use the RVM test suite.

  %li
    When contributing, either keep patches small and clear, or work on a topic
    branch - this makes it easier for us to merge in discrete changes, and means
    you always keep things separate where needed.

  %li
    The code has to be compatible with bash, and takes an almost git-like
    design architecturally.  Many actions (e.g. aliases) call out to a script
    in the ~/.rvm/scripts directory. For an example of the new, simplified
    style for coding these, make sure you check out:

    %ul
      %li scripts/snapshot
      %li scripts/repair
      %li scripts/tools

  %li
    <em>Clean</em> code is preferred - if in doubt, take a look back, and refactor.

  %li
    Visit our IRC channel #rvm on freenode and ask if you have a task in mind.
    You may find someone else has already started on it.

  %li
    If you're interested in helping out, but don't have something specific in
    mind, check out the
    %a{:href => "https://www.pivotaltracker.com/projects/26822"} rvm pivotal tracker.

%h2 Handy Tips

%ol
  %li
    Generally, working in a clone of the repository is by far the best way to go.
    When you need to test out something on a fresh install, install a new RVM to a separate path,
    then use `rvm switch ...` to use it.  This is discussed in the
    %a{:href => "https://github.com/wayneeseguin/rvm/blob/master/HACKING.md"} hacking guide.
    %pre.code
      :preserve
        $ ./install --path $HOME/.rvm-dev
        $ rvm switch $HOME/.rvm-dev

  %li
    It helps to use bash as your primary shell, but for some features you'll
    want to have zsh installed as well, to ensure compatibility.

%h2 Repositories

%ul
  %li
    %strong Main RVM Repository:
    %a{:href => "http://github.com/wayneeseguin/rvm"} wayneeseguin/rvm
  %li
    %strong RVM Website:
    %a{:href => "http://github.com/rvm/rvm-site"} rvm/rvm-site
