%h1 Installing RVM

%p
  NOTE: $  is my prompt marker!!!
%p
  There two different ways to install and use RVM.

%h2 Installation Schemes

%p
  There are two fundamentally different ways to install and configure RVM.
%ul
  %li As a standard user
  %li As root, shared across all users

%p
  If you are installing for development or most purposes, the recommended
  installation method is installing into a user's home directory completely
  self contained.

%h3 Installing as root, shared across all users
%p
  If you wish to install rvm once to say /user/local/rvm and share it for all
  user accounts, run the installer script as root. To install the latest version
  of RVM this way do the following.

%pre.code
  :preserve
    bash < <(curl -s https://rvm.beginrescueend.com/install/rvm)

%p
  %strong
    NOTE: For those who can not update ca-certificates and encounter a certificate error, a work around is to temporarily add 'insecure' to ~/.curlrc

%p
  Be sure to
  %a{:href => "/rubies/installing/"}
    Install a ruby
  and then set a
  %a{:href => "/rubies/default/"}
    default ruby
  for new shells.
%p
  For full details on how to setup RVM and how it works read the
  %a{:href => "/rvm/basics/"}
    basics page.

%p
  %strong Install not working?
  Please ensure you've read the troubleshooting notes at the bottom of this page.
  Namely, you need to
  %em ensure
  returns in your ~/.bashrc is converted to an if statement.

%h3 Installing to a user's home directory

%p
  The installation procedure for installing to a user's home directory is the
  same with one exception, when you are done you need to source the RVM function
  into your shells. You can do this at the end of your ~/.bash_profile for
  example with the following line:

  %pre.code
    :preserve
      [[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"  # Load RVM into a shell session *as a function*
%p
  Be sure to open a new shell in order to use rvm after installation and setup.

%h2 Installation Methods

%h3 Install absolute latest

%p
  To install from the github repository, which is the recommended way so that
  you get all of the latest bugfixes and features.

= sh_cmd "bash < <(curl -s https://rvm.beginrescueend.com/install/rvm)"
%p
  Note that to update RVM itself it is safe to run this script again, or follow the
  %a{:href => "/rvm/upgrading/"}
    upgrading docs.

%blockquote
  NOTE: I recommend you read the installation script yourself,
  this way you will know what it is doing and feel comfortable running it.
  You can read the script by simply running the curl inside the parenthesis.

%h3 Installing / updating the latest rvm from the latest released source tarball

= sh_cmd "curl -s https://rvm.beginrescueend.com/install/rvm -o rvm-installer ; chmod +x rvm-installer ; ./rvm-installer --version latest"

%h3 Installing a specific version

= sh_cmd "curl -s https://rvm.beginrescueend.com/install/rvm -o rvm-installer ; chmod +x rvm-installer ; ./rvm-installer 1.5.3"

%h2 Post Install

%p
  The first time you install RVM, you must put the following line into your ~/.bash_profile at the very end, after all path loads etc:
%pre.code
  :preserve
    [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # This loads RVM into a shell session.
%p
  NOTE: If you are using zsh you likely instead should put the sourcing line into ~/.zshrc
%p
  Doing so ensures rvm is loaded as a function (versus as a binary), ensuring commands such as rvm use work as expected. Please note that
  you can confirm this worked correctly by opening a new shell and running:

= sh_cmd "type rvm | head -1"

%p If this was performed correctly, you should see:

%pre.code
  :preserve
    rvm is a function

%p
  Next, you can manually load the new code into your current shell and start using RVM ! w00t!

= sh_cmd "source ~/.rvm/scripts/rvm"

%p
  Be sure to install any dependencies for your operating system by running:

= sh_cmd "rvm notes"

%p
  For more information / explanation on the above procedure you can read the
  %a{:href => "http://rvm.beginrescueend.com/rvm/basics/"}
    rvm basics
  page

%p
  The following script will boostrap git + RVM assuming that you have curl &amp; sudo installed.
  It will also install (last line) several common rubies.

%pre.code
  :preserve
    #!/usr/bin/env bash

    # Install git
    bash &lt; &lt;( curl -s https://rvm.beginrescueend.com/install/git )

    # Install RVM
    bash &lt; &lt;(curl -s https://rvm.beginrescueend.com/install/rvm)

    # Install some rubies
    source "$HOME/.rvm/scripts/rvm"
    rvm install ree,1.9.2-head,jruby

%h3
  Where to now?
%p
  If you are new to RVM I recommend that you read the
  %a{:href => "http://rvm.beginrescueend.com/rvm/basics/"}
    basics page
  At the end of the basics page there are further links as suggestions for
  getting started.

%h2 Troubleshooting your Install

%ul
  %li
    %p If you open a new shell and running:
    = sh_cmd "type rvm | head -1"
    %p does not show "rvm is a function", rvm isn't being sourced correctly.
  %li
    %p
      Do NOT 'return' from inside the .bashrc file or else RVM will be prevented from working properly -
      That is to say, if your .bashrc contains "&& return", e.g, ubuntu in particular has
    %pre.code
      :preserve
        [ -z "$PS1" ] && return
    %p you'll need to convert it into an if statement - e.g, in this case we change the given line into
    %pre.code
      :preserve
        if [[ -n "$PS1" ]]; then
    %p
      indent everything below it one level and then add a trailing "fi" on a new line. Once that is done,
      we add the source line as noted above
      %em after
      the fi you added. E.g, this:
    %pre.code
      :preserve
        [ -z "$PS1" ] && return
        # Some code here... e.g.
        export HISTCONTROL=ignoreboth
    %p would become:
    %pre.code
      :preserve
        if [[ -n "$PS1" ]]; then
          # Some code here... e.g.
          export HISTCONTROL=ignoreboth
        fi
        [[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"  # This loads RVM into a shell session.

  %li
    %p
      Ensure that rvm is the last thing sourced in all of your shell profiles - e.g. it is sourced in the
      user specific profile after any environment variables,
      %em especially PATH
      are set. Otherwise, the values you set be trampled when you switch rubies.

  %li
    %p
      If you are using GNOME on Red Hat, CentOS or Fedora ensure that the
      %em Run command as login shell
      option is checked under the
      %em Title and Command
      tab in
      %em Profile Preferences.
      After changing this setting, you may need to exit your console session and start
      a new one before the changes take affect.
