%h1 Installing RVM

%p There are two fundamentally different ways to install and configure RVM.

%ul
  %li Single-User Installation as a standard user (<strong>for developers</strong>)
  %li Multi-User installation as root (<strong>for server administrators</strong>)

%p <strong style="color: red;">For most purposes, the recommended installation method is Single-User</strong>, which is a self-contained rvm installation in a user's home directory.


%p <strong>All multi-user instructions must be run as root.</strong> The installation process is similar for both installation methods; any differences will be noted in the instructions below.

%h4 To update an existing RVM installation

%p
  It is safe to run the installation script again, or follow the
  %a{:href => "/rvm/upgrading/"}
    upgrading docs.

%h2 Installation

%p I recommend you <a href="https://rvm.beginrescueend.com/install/rvm">read the installation script yourself</a>; you will understand what it is doing and feel more comfortable running it.

%h3 1. Download and run the RVM installation script
%h4 Installing the latest release version in git:
%pre.code
  :preserve
    user$ bash &lt; &lt;(curl -s https://rvm.beginrescueend.com/install/rvm)

%h4 Installing a specific version:

%pre.code
  :preserve
    user$ curl -s https://rvm.beginrescueend.com/install/rvm -o rvm-installer ; chmod +x rvm-installer ; ./rvm-installer --version latest

%h4 Single-User Install Location: ~/.rvm/
%p
  If the install script is run as standard, non-root user, rvm will install into the current users's home directory.

%h4 Multi-User Install Location: /usr/local/rvm
%p
  If the install script is run as root, rvm will automatically install into /usr/local/rvm

%p
  <strong>If the rvm install script does nothing or complains about certificates</strong>
  you can bypass this by adding a '-k' switch to the curl command:

%pre.code
  :preserve
    user$ bash &lt; &lt;(curl -sk https://rvm.beginrescueend.com/install/rvm)

%h3 2. Load RVM into your shell sessions as a function
%em
  Throughout these instructions, you may replace .bash_profile with the appropriate startup script for your bash-compatible shell. For other shells you may need to modify these commands.
%p
  Append RVM function setup to your .bash_profile:

%h4 Single-User:

%pre.code
  :preserve
    user$ echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function' >> ~/.bash_profile

%h4 Multi-User:

%pre.code
  :preserve
    user$ echo '[[ -s "/usr/local/rvm/scripts/rvm" ]] && . "/usr/local/rvm/scripts/rvm" # Load RVM function' >> ~/.bash_profile

%p
  %em Multi-User Install Note: The rvm function must be configured for every user you wish to use rvm.


%h3 3. Reload shell configuration &amp; test

%p Open a new shell or reload your .bash_profile with the following command:

%pre.code
  :preserve
    user$ source .bash_profile

%p If configuration and installation was performed correctly, this command should output 'rvm is a function':

%pre.code
  :preserve
    user$ type rvm | head -1

%p See if there are any dependencies for your operating system by running:

%pre.code
  :preserve
    user$ rvm notes

%h4 Congratulations! You have successfully installed RVM.

%p
  <strong>Multi-User Install Note:</strong> After installation, where you would normally use 'sudo', non-root users will need to use 'rvmsudo' (e.g. <code>rvmsudo gem install xxxx</code>). This may affect or break some deployment scripts.
  E.G:
%pre.code
  :preserve
    # Incorrect, this will fail
    user$ sudo gem install xxxx

    # Correct usage, this will succeed
    user$ rvmsudo gem install xxxx

%h2 Try out your new RVM installation:

%em I've included the (truncated) output of each command on my system as an example.

%p Display list of all "known" rubies (RVM can install many more rubies not listed):
%pre.code
  :preserve
    user$ rvm list known
    # MRI Rubies
    ...
    [ruby-]1.8.7[-p334]
    [ruby-]1.8.7-head
    ...
    [ruby-]1.9.2[-p180]
    [ruby-]1.9.2-head
    ruby-head

    # JRuby
    jruby-1.2.0

    ...

%p Install a version of ruby (eg 1.9.2):

%pre.code
  :preserve
    user$ rvm install 1.9.2
    Installing Ruby from source to: /Users/user/.rvm/rubies/ruby-1.9.2-p180, this may take a while depending on your cpu(s)...

    ruby-1.9.2-p180 - #fetching
    ruby-1.9.2-p180 - #downloading ruby-1.9.2-p180, this may take a while depending on your connection...
    ...
    ruby-1.9.2-p180 - #extracting ruby-1.9.2-p180 to /Users/user/.rvm/src/ruby-1.9.2-p180
    ruby-1.9.2-p180 - #extracted to /Users/user/.rvm/src/ruby-1.9.2-p180
    ruby-1.9.2-p180 - #configuring
    ruby-1.9.2-p180 - #compiling
    ruby-1.9.2-p180 - #installing
    ...
    Install of ruby-1.9.2-p180 - #complete

%p Use the ruby version:

%pre.code
  :preserve
    user$ rvm use 1.9.2
    Using /Users/user/.rvm/gems/ruby-1.9.2-p180

%p Check this worked correctly:
%pre.code
  :preserve
    user$ ruby -v
    ruby 1.9.2p180 (2011-02-18 revision 30909) [i386-darwin9.8.0]

    user$ which ruby
    Using /Users/user/.rvm/gems/ruby-1.9.2-p180

%p Optionally, set a version of ruby to use as the default for new shells (overrides the 'system' ruby):

%pre.code
  :preserve
    user$ rvm use 1.9.2 --default

%h2 Enjoy using RVM!

%h3
  Where to now?
%p
  If you are new to RVM I recommend that you read the
  %a{:href => "http://rvm.beginrescueend.com/rvm/basics/"}
    basics page
  At the end of the basics page there are further links as suggestions for
  getting started.

%h2 Troubleshooting your Install

%ul
  %li
    %p If you open a new shell and running:
    = sh_cmd "type rvm | head -1"
    %p does not show "rvm is a function", rvm isn't being sourced correctly.

  %li
    %p
      Ensure that rvm is sourced after any path settings as RVM and manipulates the path.
      Failure to do this may end up with RVM not working as expected.

  %li
    %p
      If you are using GNOME on Red Hat, CentOS or Fedora ensure that the
      %em Run command as login shell
      option is checked under the
      %em Title and Command
      tab in
      %em Profile Preferences.
      After changing this setting, you may need to exit your console session and start
      a new one before the changes take affect.

%h3 Example rvm bootstrap script

%p
  The following script will boostrap git + RVM assuming that you have curl &amp; sudo installed.
  It will also install (last line) several common rubies.

%pre.code
  :preserve
    #!/usr/bin/env bash

    # Install git
    bash &lt; &lt;( curl -s https://rvm.beginrescueend.com/install/git )

    # Install RVM
    bash &lt; &lt;(curl -s https://rvm.beginrescueend.com/install/rvm)

    # Install some rubies
    source "$HOME/.rvm/scripts/rvm"
    rvm install 1.9.2,rbx,jruby

