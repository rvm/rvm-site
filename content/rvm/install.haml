%h1 Installing RVM

%p
  NOTE: $  is my prompt marker!!!
%p
  There are three very different ways to use RVM.

%ul
  %li As a User
  %li As Root (be *very* sure you know what you are doing... - like user, but into /usr/local/rvm)
  %li System Wide (Multiple Users, Installed via Root).

%p
  Installing rvm system wide is discouraged and we no longer provide support for this,
  if you still want to do so you can follow the steps in
	%a{:href => 'http://lee.jarvis.co/rvm-plays-nice-on-production/'} this article
	or ping
	%em injekt
	in the rvm IRC channel.

%p
  Don't forget to set your
  %a{:href => "/rubies/default/"} default ruby
  after the installation so that your command line opens with ruby enabled.

%p
  %strong Install not working?
  Please ensure you've read the troubleshooting notes at the bottom of this page.
  Namely, you need to
  %em ensure
  returns in your ~/.bashrc is converted to an if statement.

%p
  There are at least 2 ways to install RVM.

%h3 1. GitHub Repository (recommended)

%p
  To install from the github repository, recommended.

= sh_cmd "bash < <( curl http://rvm.beginrescueend.com/releases/rvm-install-head )"
%p
  Note that to update RVM itself it is safe to run this script again, or follow the
  %a{:href => "/rvm/upgrading/"}
    upgrading docs.
%p
  What this script essentially does is the following, with some extra checks and tweaks:
%pre.code
  :preserve
    mkdir -p ~/.rvm/src/ &amp;&amp; cd ~/.rvm/src &amp;&amp; rm -rf ./rvm/ &amp;&amp; git clone --depth 1 git://github.com/wayneeseguin/rvm.git &amp;&amp; cd rvm &amp;&amp; ./install
%p
  Note that if you are behind a firewall (slower, but it should work), change the git:// to http:// like this:
%pre.code
  :preserve
    mkdir -p ~/.rvm/src/ &amp;&amp; cd ~/.rvm/src &amp;&amp; rm -rf ./rvm/ &amp;&amp; git clone --depth 1 http://github.com/wayneeseguin/rvm.git &amp;&amp; cd rvm &amp;&amp; ./install
%blockquote
  NOTE: I recommend you read the installation script yourself,
  this way you will know what it is doing and feel comfortable running it.
  You can read the script by simply running the curl inside the parenthesis.

%h3 2. Installing / updating the latest rvm from the latest source tarball

= sh_cmd "bash < <( curl http://rvm.beginrescueend.com/releases/rvm-install-latest )"

%p
  What this script essentially does is the following, with some extra checks and tweaks:
%pre.code
  :preserve
    version=$(curl http://rvm.beginrescueend.com/releases/stable-version.txt);
    mkdir -p ~/.rvm/src/ &amp;&amp; cd ~/.rvm/src/ &amp;&amp; curl -O http://rvm.beginrescueend.com/releases/rvm-${version}.tar.gz | tar zxf - &amp;&amp; cd rvm-${version} &amp;&amp; ./install

%h2 Post Install

%p
  The first time you install RVM, you must put the following line into your ~/.bash_profile at the very end, after all path loads etc:
%pre.code
  :preserve
    [[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"  # This loads RVM into a shell session.
%p
  NOTE: If you are using zsh you likely instead should put the sourcing line into ~/.zshrc
%p
  Doing so ensures rvm is loaded as a function (versus as a binary), ensuring commands such as rvm use work as expected. Please note that
  you can confirm this worked correctly by opening a new shell and running:

= sh_cmd "type rvm | head -1"

%p If this was performed correctly, you should see:

%pre.code
  :preserve
    rvm is a function

%p
  Next, you can manually load the new code into your current shell and start using RVM ! w00t!

= sh_cmd "source ~/.rvm/scripts/rvm"

%p
  Be sure to install any dependencies for your operating system by running:

= sh_cmd "rvm notes"

%p
  For more information / explanation on the above procedure you can read the
  %a{:href => "http://rvm.beginrescueend.com/rvm/basics/"}
    rvm basics
  page

%p
  The following script will boostrap git + RVM assuming that you have curl &amp; sudo installed.
  It will also install (last line) several common rubies.

%pre.code
  :preserve
    #!/usr/bin/env bash

    # Install git
    bash &lt; &lt;( curl http://rvm.beginrescueend.com/install/git )

    # Install RVM
    bash &lt; &lt;( curl http://rvm.beginrescueend.com/releases/rvm-install-head )

    # Install some rubies
    source "$HOME/.rvm/scripts/rvm"
    rvm install ree,1.9.2-head,jruby

%h3
  Where to now?
%p
  If you are new to RVM I recommend that you read the
  %a{:href => "http://rvm.beginrescueend.com/rvm/basics/"}
    basics page
  At the end of the basics page there are further links as suggestions for
  getting started.

%h2 Troubleshooting your Install

%ul
  %li
    %p If you open a new shell and running:
    = sh_cmd "type rvm | head -1"
    %p does not show "rvm is a function", rvm isn't being sourced correctly.
  %li
    %p
      Do NOT 'return' from inside the .bashrc file or else RVM will be prevented from working properly -
      That is to say, if your .bashrc contains "&& return", e.g, ubuntu in particular has
    %pre.code
      :preserve
        [ -z "$PS1" ] && return
    %p you'll need to convert it into an if statement - e.g, in this case we change the given line into
    %pre.code
      :preserve
        if [[ -n "$PS1" ]]; then
    %p
      indent everything below it one level and then add a trailing "fi" on a new line. Once that is done,
      we add the source line as noted above
      %em after
      the fi you added. E.g, this:
    %pre.code
      :preserve
        [ -z "$PS1" ] && return
        # Some code here... e.g.
        export HISTCONTROL=ignoreboth
    %p would become:
    %pre.code
      :preserve
        if [[ -n "$PS1" ]]; then
          # Some code here... e.g.
          export HISTCONTROL=ignoreboth
        fi
        [[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"  # This loads RVM into a shell session.

  %li
    %p
      Ensure that rvm is the last thing sourced in all of your shell profiles - e.g. it is sourced in the
      user specific profile after any environment variables,
      %em especially PATH
      are set. Otherwise, the values you set be trampled when you switch rubies.

  %li
    %p
      If you are using GNOME on Red Hat, CentOS or Fedora ensure that the
      %em Run command as login shell
      option is checked under the
      %em Title and Command
      tab in
      %em Profile Preferences.
      After changing this setting, you may need to exit your console session and start
      a new one before the changes take affect.
