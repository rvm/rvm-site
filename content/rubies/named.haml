.breadcrumbs
  %a{ :href => "/" }
    Documentation
  &nbsp;>&nbsp;
  %a{ :href => "/rubies/" }
    Rubies
  &nbsp;>&nbsp;
  %a{ :href => "/rubies/named/" }
    Named
  %hr

%h1 Named Rubies
%p
  RVM allows you to install the same ruby multiple times using suffixes.
  This can be useful for a number of purposes, such as making and testing
  patches for a ruby itself.
  You may also want to read about 
  %a{:href => "/rubies/patching/"}
    how to patch
  and 
  %a{:href => "/rubies/alias/"}
    how to alias
  rubies.

%h2 Creating a named Ruby
%p
  The process is the same as installation, just use the
  %strong -n {name}
  
  switch:
%pre.code
  :preserve
    $ rvm install rbx -n default_19 -- --default-version=1.9
    rbx-head-default_19 installing #dependencies
    ...
    $ rvm use rbx-default_19
    Using /home/mpapis/.rvm/gems/rbx-head-default_19

%p
  or simply add a hyphen and the name as a suffix to a valid ruby version:
%pre.code
  :preserve
    $ rvm install 1.9.2-named
    ...
    ruby-1.9.2-p290-named - #configuring
    ...
    $ rvm use 1.9.2-named
    Using /home/mpapis/.rvm/gems/ruby-1.9.2-p290-named

%h2 Selecting names for your Rubies
%p
  There are strict rules for the names of named rubies. First, the name of
  a named ruby must match the following regexp pattern:
%pre.code
  :preserve
    [[:alpha:]][[:alnum:]_]*
%p
  Second, the name must also not match any other version specifier,
  nor any of the following regexp patterns:
%pre.code
  :preserve
    head
    system
    nightly
    preview.*
    rc[[:digit:]].*
    p[[:digit:]].*
    r[[:digit:]].*
    s[[:alnum:]].*
    tv[[:digit:]].*
    t[[:digit:]].*
    m[[:digit:]].*
    u[[:alnum:]].*
    a[[:digit:]][[:digit:]].*
    b[[:digit:]].*
    ruby
    rbx
    jruby
    macruby
    ree
    kiji
    rubinius
    maglev
    ironruby
    goruby

%p
  If the above list is incomplete or you find exceptions please feel free to
  %a{ :href => "/development/contributing/" }
    contribute.
