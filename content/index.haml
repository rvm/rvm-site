---
title: RVM Ruby Version Manager - Documentation
---

.text-center
  %h1
    Ruby Version Manager (RVM)  
  %p
    RVM is a command-line tool which allows you to easily install, manage, and work with multiple ruby
    environments from interpreters to sets of gems.
    
  %a{ :href => "http://www.vgcats.com/comics/?strip_id=285" }
    %img{ :src => "https://img.skitch.com/20090904-fyqnyu8pcr36ahe91er9x28bhi.png", :alt => "w00t!" }

%br
%br
%h1.text-center
  Cut Rubies with ease!


%ul.square
  %li
    Install RVM with a Ruby (latest will be Ruby 2, but you may specify):
    = sh_cmd "\\curl -L https://get.rvm.io | bash -s stable"
    For all in one installation append
    %code --rails
    or
    %code --ruby=1.9.3
  %li
    for more details visit the
    %a{:href => "/rvm/install/"}
      installation documentation,
  %li
    and read about the new
    %a{:href => "/rvm/autolibs/"}
      autolib features
  %li
    watch the most accurate (but not official)
    %a{:href => "http://screencasts.org/episodes/how-to-use-rvm", :target=>"_blank"}
      rvm screencast
    ,
  %li
    read the most accurate (but not official)
    %a{:href => "http://cheat.errtheblog.com/s/rvm", :target=>"_blank"}
      rvm cheat sheet
    ,
  %li
    and try the official RVM GUI
    %i (OS X users only):
    %a{:href => "http://unfiniti.com/software/mac/jewelrybox", :target=>"_blank"}
      JewelryBox,
  %li
    starting with Rails? watch the
    %a{:href => "http://railscasts.com/episodes/310-getting-started-with-rails", :target=>"_blank"}
      RailsCasts.com on Getting Started with Rails

%hr
%h2 Community Maintained Project
%p
  RVM is maintained by the community through pull requests sent to the project
  repository which is located on github at
  %a{:href => "https://github.com/wayneeseguin/rvm"}
    https://github.com/wayneeseguin/rvm

%hr
%h2 Community Supported Project
%p
  RVM is supported by the community via either the (google group)
  %a{:href => 'http://groups.google.com/group/rubyversionmanager/'}
    Mailing List

  or more real time help via gracious users in the the RVM IRC channel
  %a{ :href => "http://webchat.freenode.net/?channels=rvm" }
    \#rvm on irc.freenode.net

%h2 Production

%p
  RVM  lets you deploy each project with its own completely self-contained and dedicated environment,
  from the specific version of ruby, all the way down to the precise set of required gems to run your
  application. Having a precise set of gems also avoids the issue of version conflicts between
  projects, which can cause difficult-to-trace errors and hours of hair loss. With RVM, NO OTHER
  GEMS than those required are installed. This makes working with multiple complex applications, where
  each has a long list of gem dependencies, much more efficient. RVM let you easily test gem upgrades,
  by switching to a new clean set of gems to test with, while leaving your original set intact.
  It is flexible enough to even let you maintain a set of gems per environment, or per development
  branch, or even per individual developer's taste!

%h2 Development

%p
  RVM reduces the complexity of the many facets of ruby development through
  its command-line API.  With RVM, you can have **identical** self-contained
  environments in your Development, CI, Q/A, Staging, and Production environments.
  No more hidden gotchas: if it works for one of them, it will work in all of them.
  With named gemsets, you can reliably and immediately push changes from one environment to another.
  And, RVM is for Ruby applications, *not just for Rails*!
  %em Any
  Ruby based application will benefit from your use of RVM.

%h2 Testing

%p
  RVM enables you to easily test both upgrade and escape paths very easily and consistently.
  With RVM, you can run a test suite, rake tasks, benchmarks and gem commands against multiple ruby
  versions
  %em at the same time.
  This means that you can easily ensure your applications work in Ruby 1.8.X, REE, MRI 1.9.1, jruby,
  etc... and quickly expose any areas in which they do not.

%h2 Gem Management
%p
  RVM has an extremely flexible gem management system called Named Gem Sets. RVM's 'gemsets' make
  managing gems across multiple versions of Ruby a non-issue. RVM lets you add a small text file to
  your application's repository, instead of checking in tons of gems which would needlessly inflate
  your repository size. Additionally, RVM's gemset management uses a common cache directory, so only
  one downloaded version of each gem resides on disk rather than several copies.

%p
  RVM helps ensure that all aspects of Ruby are completely contained within user space, strongly
  encouraging safer, non-root use. Use of RVM rubies thus provides a higher level of system security,
  and therefore reduces risk and cuts overall system downtime. Additionally, since all processes run at
  the user level, a compromised ruby process cannot compromise the entire system.

%h2 Support

%p
  RVM is continuously evolving, thanks to community pull requests to the project.
