.breadcrumbs
  %a{ :href => "/" }
    Documentation
  &nbsp;>&nbsp;
  %a{ :href => "/support/" }
    Support
  &nbsp;>&nbsp;
  %a{ :href => "/support/faq/" }
    FAQ
  %hr

%h1
  RVM FAQ & Notes

%h2
  I have found a bug in RVM. How do I submit an issue or a patch to get this fixed?
%p
  To report bugs against RVM, please go to https://github.com/wayneeseguin/rvm/issues/ and open an Issue there.
  %strong
    READ ALL EXISTING REPORTS!
  Sometimes the problem is already under investigation or has already been solved. Opening a new one for the same issue is a waste of time and resources and may cause your report to be summarily closed. Please use
  %a{:href => "https://gist.github.com"}
    https://gist.github.com
  to store and file supplimentary evidence related to the bug report. Include the returned https (not git) URL in your report. Please provide
  %ul
    %li
      A) The output from
      %pre.code
        :preserve
          rvm info
    %li
      B) If you are using gemsets, the output from
      %pre.code
        :preserve
          gem list -dl
    %li
      C) All commands run, any errors / output, and contents of logfiles RVM tells you to look in.
    %li
      D) The complete output of the following trace / debugging command.
      %pre.code
        :preserve
          set -x ; rvm --trace your_commands_here ; set +x
      to give us maximum information to work with. These must accompany your Issue / Bug report in order for us to be able to assist you.

%h2#shell_login
  What shell login means ('bash -l')
%p
  There are sites that describe this how it was 10 years ago like
  %a{:href => "http://askubuntu.com/questions/40287/etc-profile-not-being-sourced"} here
  or
  %a{:href => "http://superuser.com/questions/183870/difference-between-bashrc-and-bash-profile/183980#183980"} here
  so read to see how it works in current world:

  %ol
    %li
      When you login graphically to your system it will read `~/.profile` so you put there settings like `LANG` which are important for graphical applications
    %li
      When you open a terminal (except Gnome-terminal & Screen) you open a `login` shell which sources `~/.bash_profile`
    %li
      When you execute commands in non login shell like `ssh server command` or `scp file server:~` or `sudo`(without -i) or `su` (without -l) it will execute `~/.bashrc`

  %p
    `~/.bashrc` is meant for non login invocations, you should not print there any output - it makes tools like `scp` to fail
  %p
    it is good idea to put environment variables in `~/.bashrc`, things that you depend upon in your scripts (for `ssh server script`)
  %p
    then if your system does not source  `~/.bashrc` by default via `/etc/profile` you should source it in `~/.bash_profile` file so any login shell will have access also to the same environment like non login sessions.
  %p
    RVM by default adds itself currently to `~/.bash_profile` file, and the recommended way is to enable login shell in gnome-terminal (and screen).

%p
  To fix the configuration files automatically run:
  %pre.code
    :preserve
      rvm get [head|stable] --auto

%h2
  I noticed some incorrect information on the RVM website. How do I submit a patch or Issue?
%p
  Please feel free to fork
  %a{ :href => "https://github.com/rvm/rvm-site/" }
    rvm-site
  and to fix anything you find amiss. Then submit a Pull Request.
  Regardless, whether you feel comfortable doing the above or not, please file an Issue at
  %a{ :href => "https://github.com/rvm/rvm-site/issues/" }
    Issue Tracker
  complete with the current error and the change as you see it. If you created a pull request, please
  reference the URL in your Issue.

%h2
  Do I need to use sudo with gems?
%p
  %strong
    NO. DO NOT USE sudo
  for RVM managed rubygems.
  If you require more explanation see the
  %a{ :href => "/rubies/rubygems/" }
    rubygems
  page.

%h2
  Install gems as root?
%p
  %strong
    NO.
  If you require more explanation see the
  %a{ :href => "/rubies/rubygems/" }
    rubygems
  page.

%h2
  RVM is not found or the RVM selected default ruby is not set for new shells...
%p
  RVM must be included at the bottom of the profile files. Otherwise your settings will clobber it's (example: PATH). Refer to the
  %a{:href => "/rvm/install/"} install directions
  to include this in your PATH.

%h2
  Does RVM work on windows? Will it in the future?
%p
  NO. If you would like to manage multiple versions of ruby on windows please use pik which is an excellent tool by Gordon Thiesfeld. You can find it on
  %a{:href => "http://github.com/vertiginous/pik/"}
    GitHub.

%h2
  Can I use a path with spaces?
%p
  Currently spaces in paths are not supported. Patches welcome :)

%h2
  How do I set a ruby to be default?
%p
  Setting the default ruby is
  %a{ :href => "/rubies/default/" }
    explained here
  \.

%h2
  What are the defaults.
%p
  The default interpreter is 'ruby'.
  The default versions for each ruby interpreter are set in ~/.rvm/config/db and can be overridden by the user in ~/.rvm/config/user.
%h2
  Where are Ruby Gems kept?
%ul
  %li
    Ruby Gems for all installed ruby interpreters and versions are stored completely separate.
    Gems are located in ~/.rvm/gems/$ruby_string.
    Gems can be additionally separated using
    %a{ :href => "/gemsets/" }
      Gem Sets
    \.
    A gem directory using gemsets is of the form:  ~/.rvm/gems/$ruby_string@gemset_name

%h2
  Where is everything installed to ?
%p
  RVM installs everything into ~/.rvm. To remove RVM from your system run
  'rm -rf ~/.rvm'.  You may have one additional config file in ~/.rvmrc and of
  course the RVM hook in your bash/zsh startup files.

%h2
  Do I need the gem after I install RVM?
%p
  No, the gem is only used for distribution, you can just as easily clone the github repo and run ./install.
  After installation the Gem is no longer necessary and can be safely removed.
%p
  Unless, that is, you are using the RVM Ruby API.
  Then using the gem can be helpful but not necessary, as it can also be loaded
  from ~/.rvm/lib/.

%h2
  My ruby is compiling as 32 bit but I am on Mac OS X Snow Leopard which has heavy advertisement that it is 64 bit!!!
%p
  RVM compiles to your current running kernel's architecture. This means that if your kernel is running as a 32 bit kernel (uname -m) it will compile 32 bit. You can override this behavior by placing the following in your ~/.rvmrc before installing the ruby interpreter:
%pre.code
  :preserve
    rvm_archflags="-arch x86_64"

%a{:href => "#", :name => "root"}
%h2
  I want to install for root only!
%p
  Please note that if you want to install for root only, using a per-user install, then you
  %strong
    must
  prepopulate root's $HOME/.rvmrc with the following BEFORE you attempt to install:
  %pre.code
    :preserve
      echo 'export rvm_prefix="$HOME"' > /root/.rvmrc
      echo 'export rvm_path="$HOME/.rvm"' >> /root/.rvmrc

  to override the checking done that assumes that if root is executing the install it must be a Multi-User installation type, and that RVM must go into /usr/local/rvm. This also negates the need to use sudo, as the combination of all these factors effeccively turns it into a Per-User installation type specifically for the root user only.
  %strong
    Please note that this is <em>not</em> a typical, or generally supported installation type.
